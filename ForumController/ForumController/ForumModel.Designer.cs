//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_Forum_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Users), "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.Forum), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_Post_Forum", "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Forum), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.Post), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_Topic_Forum1", "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Forum), "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.Topic), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_Post_Topic", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Topic), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.Post), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_Post_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Users), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.Post), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_Topic_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Users), "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.Topic), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_UserTopicLastActiv_Topic", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Topic), "UserTopicLastActiv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.UserTopicLastActiv), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_UserTopicLastActiv_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Users), "UserTopicLastActiv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.UserTopicLastActiv), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_UsersInRoles_Users", "UsersInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.UsersInRoles), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Users), true)]
[assembly: EdmRelationshipAttribute("ForumV2Model", "FK_UsersInRoles_Roles", "UsersInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumController.UsersInRoles), "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumController.Roles), true)]

#endregion

namespace ForumController
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ForumV2Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ForumV2Entities object using the connection string found in the 'ForumV2Entities' section of the application configuration file.
        /// </summary>
        public ForumV2Entities() : base("name=ForumV2Entities", "ForumV2Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForumV2Entities object.
        /// </summary>
        public ForumV2Entities(string connectionString) : base(connectionString, "ForumV2Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForumV2Entities object.
        /// </summary>
        public ForumV2Entities(EntityConnection connection) : base(connection, "ForumV2Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Forum> Forum
        {
            get
            {
                if ((_Forum == null))
                {
                    _Forum = base.CreateObjectSet<Forum>("Forum");
                }
                return _Forum;
            }
        }
        private ObjectSet<Forum> _Forum;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Post> Post
        {
            get
            {
                if ((_Post == null))
                {
                    _Post = base.CreateObjectSet<Post>("Post");
                }
                return _Post;
            }
        }
        private ObjectSet<Post> _Post;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Topic> Topic
        {
            get
            {
                if ((_Topic == null))
                {
                    _Topic = base.CreateObjectSet<Topic>("Topic");
                }
                return _Topic;
            }
        }
        private ObjectSet<Topic> _Topic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserTopicLastActiv> UserTopicLastActiv
        {
            get
            {
                if ((_UserTopicLastActiv == null))
                {
                    _UserTopicLastActiv = base.CreateObjectSet<UserTopicLastActiv>("UserTopicLastActiv");
                }
                return _UserTopicLastActiv;
            }
        }
        private ObjectSet<UserTopicLastActiv> _UserTopicLastActiv;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersInRoles> UsersInRoles
        {
            get
            {
                if ((_UsersInRoles == null))
                {
                    _UsersInRoles = base.CreateObjectSet<UsersInRoles>("UsersInRoles");
                }
                return _UsersInRoles;
            }
        }
        private ObjectSet<UsersInRoles> _UsersInRoles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Forum EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForum(Forum forum)
        {
            base.AddObject("Forum", forum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Post EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPost(Post post)
        {
            base.AddObject("Post", post);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Topic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopic(Topic topic)
        {
            base.AddObject("Topic", topic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTopicLastActiv EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTopicLastActiv(UserTopicLastActiv userTopicLastActiv)
        {
            base.AddObject("UserTopicLastActiv", userTopicLastActiv);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersInRoles(UsersInRoles usersInRoles)
        {
            base.AddObject("UsersInRoles", usersInRoles);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumV2Model", Name="Forum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Forum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Forum object.
        /// </summary>
        /// <param name="forumID">Initial value of the ForumID property.</param>
        /// <param name="topicsCount">Initial value of the TopicsCount property.</param>
        /// <param name="forumName">Initial value of the ForumName property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Forum CreateForum(global::System.Int32 forumID, global::System.Int32 topicsCount, global::System.String forumName, global::System.DateTime createDate, global::System.Guid userId)
        {
            Forum forum = new Forum();
            forum.ForumID = forumID;
            forum.TopicsCount = topicsCount;
            forum.ForumName = forumName;
            forum.CreateDate = createDate;
            forum.UserId = userId;
            return forum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumID
        {
            get
            {
                return _ForumID;
            }
            set
            {
                if (_ForumID != value)
                {
                    OnForumIDChanging(value);
                    ReportPropertyChanging("ForumID");
                    _ForumID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ForumID");
                    OnForumIDChanged();
                }
            }
        }
        private global::System.Int32 _ForumID;
        partial void OnForumIDChanging(global::System.Int32 value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicsCount
        {
            get
            {
                return _TopicsCount;
            }
            set
            {
                OnTopicsCountChanging(value);
                ReportPropertyChanging("TopicsCount");
                _TopicsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicsCount");
                OnTopicsCountChanged();
            }
        }
        private global::System.Int32 _TopicsCount;
        partial void OnTopicsCountChanging(global::System.Int32 value);
        partial void OnTopicsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ForumName
        {
            get
            {
                return _ForumName;
            }
            set
            {
                OnForumNameChanging(value);
                ReportPropertyChanging("ForumName");
                _ForumName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ForumName");
                OnForumNameChanged();
            }
        }
        private global::System.String _ForumName;
        partial void OnForumNameChanging(global::System.String value);
        partial void OnForumNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastPostID
        {
            get
            {
                return _LastPostID;
            }
            set
            {
                OnLastPostIDChanging(value);
                ReportPropertyChanging("LastPostID");
                _LastPostID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPostID");
                OnLastPostIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LastPostID;
        partial void OnLastPostIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Forum_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Forum_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Forum_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Forum_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("ForumV2Model.FK_Forum_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Post_Forum", "Post")]
        public EntityCollection<Post> Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("ForumV2Model.FK_Post_Forum", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("ForumV2Model.FK_Post_Forum", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Topic_Forum1", "Topic")]
        public EntityCollection<Topic> Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Topic>("ForumV2Model.FK_Topic_Forum1", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Topic>("ForumV2Model.FK_Topic_Forum1", "Topic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumV2Model", Name="Post")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Post : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Post object.
        /// </summary>
        /// <param name="postID">Initial value of the PostID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="topicID">Initial value of the TopicID property.</param>
        /// <param name="forumID">Initial value of the ForumID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static Post CreatePost(global::System.Int32 postID, global::System.String text, global::System.Int32 topicID, global::System.Int32 forumID, global::System.Guid userId, global::System.DateTime dateAdded)
        {
            Post post = new Post();
            post.PostID = postID;
            post.Text = text;
            post.TopicID = topicID;
            post.ForumID = forumID;
            post.UserId = userId;
            post.DateAdded = dateAdded;
            return post;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostID
        {
            get
            {
                return _PostID;
            }
            set
            {
                if (_PostID != value)
                {
                    OnPostIDChanging(value);
                    ReportPropertyChanging("PostID");
                    _PostID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostID");
                    OnPostIDChanged();
                }
            }
        }
        private global::System.Int32 _PostID;
        partial void OnPostIDChanging(global::System.Int32 value);
        partial void OnPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicID
        {
            get
            {
                return _TopicID;
            }
            set
            {
                OnTopicIDChanging(value);
                ReportPropertyChanging("TopicID");
                _TopicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicID");
                OnTopicIDChanged();
            }
        }
        private global::System.Int32 _TopicID;
        partial void OnTopicIDChanging(global::System.Int32 value);
        partial void OnTopicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumID
        {
            get
            {
                return _ForumID;
            }
            set
            {
                OnForumIDChanging(value);
                ReportPropertyChanging("ForumID");
                _ForumID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForumID");
                OnForumIDChanged();
            }
        }
        private global::System.Int32 _ForumID;
        partial void OnForumIDChanging(global::System.Int32 value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Post_Forum", "Forum")]
        public Forum Forum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("ForumV2Model.FK_Post_Forum", "Forum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("ForumV2Model.FK_Post_Forum", "Forum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Forum> ForumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("ForumV2Model.FK_Post_Forum", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Forum>("ForumV2Model.FK_Post_Forum", "Forum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Post_Topic", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("ForumV2Model.FK_Post_Topic", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("ForumV2Model.FK_Post_Topic", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("ForumV2Model.FK_Post_Topic", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("ForumV2Model.FK_Post_Topic", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Post_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Post_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Post_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Post_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("ForumV2Model.FK_Post_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumV2Model", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Roles object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="roleLoweredName">Initial value of the RoleLoweredName property.</param>
        public static Roles CreateRoles(global::System.Guid roleId, global::System.String roleName, global::System.String roleLoweredName)
        {
            Roles roles = new Roles();
            roles.RoleId = roleId;
            roles.RoleName = roleName;
            roles.RoleLoweredName = roleLoweredName;
            return roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleLoweredName
        {
            get
            {
                return _RoleLoweredName;
            }
            set
            {
                OnRoleLoweredNameChanging(value);
                ReportPropertyChanging("RoleLoweredName");
                _RoleLoweredName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleLoweredName");
                OnRoleLoweredNameChanged();
            }
        }
        private global::System.String _RoleLoweredName;
        partial void OnRoleLoweredNameChanging(global::System.String value);
        partial void OnRoleLoweredNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_UsersInRoles_Roles", "UsersInRoles")]
        public EntityCollection<UsersInRoles> UsersInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInRoles>("ForumV2Model.FK_UsersInRoles_Roles", "UsersInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInRoles>("ForumV2Model.FK_UsersInRoles_Roles", "UsersInRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumV2Model", Name="Topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topic object.
        /// </summary>
        /// <param name="topicID">Initial value of the TopicID property.</param>
        /// <param name="topicName">Initial value of the TopicName property.</param>
        /// <param name="forumID">Initial value of the ForumID property.</param>
        /// <param name="postsCount">Initial value of the PostsCount property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Topic CreateTopic(global::System.Int32 topicID, global::System.String topicName, global::System.Int32 forumID, global::System.Int32 postsCount, global::System.DateTime createDate, global::System.Guid userId)
        {
            Topic topic = new Topic();
            topic.TopicID = topicID;
            topic.TopicName = topicName;
            topic.ForumID = forumID;
            topic.PostsCount = postsCount;
            topic.CreateDate = createDate;
            topic.UserId = userId;
            return topic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicID
        {
            get
            {
                return _TopicID;
            }
            set
            {
                if (_TopicID != value)
                {
                    OnTopicIDChanging(value);
                    ReportPropertyChanging("TopicID");
                    _TopicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TopicID");
                    OnTopicIDChanged();
                }
            }
        }
        private global::System.Int32 _TopicID;
        partial void OnTopicIDChanging(global::System.Int32 value);
        partial void OnTopicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TopicName
        {
            get
            {
                return _TopicName;
            }
            set
            {
                OnTopicNameChanging(value);
                ReportPropertyChanging("TopicName");
                _TopicName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TopicName");
                OnTopicNameChanged();
            }
        }
        private global::System.String _TopicName;
        partial void OnTopicNameChanging(global::System.String value);
        partial void OnTopicNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumID
        {
            get
            {
                return _ForumID;
            }
            set
            {
                OnForumIDChanging(value);
                ReportPropertyChanging("ForumID");
                _ForumID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForumID");
                OnForumIDChanged();
            }
        }
        private global::System.Int32 _ForumID;
        partial void OnForumIDChanging(global::System.Int32 value);
        partial void OnForumIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostsCount
        {
            get
            {
                return _PostsCount;
            }
            set
            {
                OnPostsCountChanging(value);
                ReportPropertyChanging("PostsCount");
                _PostsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostsCount");
                OnPostsCountChanged();
            }
        }
        private global::System.Int32 _PostsCount;
        partial void OnPostsCountChanging(global::System.Int32 value);
        partial void OnPostsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastPostID
        {
            get
            {
                return _LastPostID;
            }
            set
            {
                OnLastPostIDChanging(value);
                ReportPropertyChanging("LastPostID");
                _LastPostID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPostID");
                OnLastPostIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LastPostID;
        partial void OnLastPostIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastPostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Topic_Forum1", "Forum")]
        public Forum Forum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("ForumV2Model.FK_Topic_Forum1", "Forum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("ForumV2Model.FK_Topic_Forum1", "Forum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Forum> ForumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("ForumV2Model.FK_Topic_Forum1", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Forum>("ForumV2Model.FK_Topic_Forum1", "Forum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Post_Topic", "Post")]
        public EntityCollection<Post> Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("ForumV2Model.FK_Post_Topic", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("ForumV2Model.FK_Post_Topic", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Topic_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Topic_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Topic_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_Topic_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("ForumV2Model.FK_Topic_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_UserTopicLastActiv_Topic", "UserTopicLastActiv")]
        public EntityCollection<UserTopicLastActiv> UserTopicLastActiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTopicLastActiv>("ForumV2Model.FK_UserTopicLastActiv_Topic", "UserTopicLastActiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTopicLastActiv>("ForumV2Model.FK_UserTopicLastActiv_Topic", "UserTopicLastActiv", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumV2Model", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="userLoweredName">Initial value of the UserLoweredName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lockedDateOut">Initial value of the LockedDateOut property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="loweredEmail">Initial value of the LoweredEmail property.</param>
        /// <param name="isActivated">Initial value of the IsActivated property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        public static Users CreateUsers(global::System.Guid userId, global::System.String userName, global::System.String userLoweredName, global::System.String password, global::System.DateTime createdDate, global::System.DateTime lockedDateOut, global::System.Boolean isLocked, global::System.DateTime lastActivityDate, global::System.String email, global::System.String loweredEmail, global::System.Boolean isActivated, global::System.DateTime lastLoginDate)
        {
            Users users = new Users();
            users.UserId = userId;
            users.UserName = userName;
            users.UserLoweredName = userLoweredName;
            users.Password = password;
            users.CreatedDate = createdDate;
            users.LockedDateOut = lockedDateOut;
            users.IsLocked = isLocked;
            users.LastActivityDate = lastActivityDate;
            users.Email = email;
            users.LoweredEmail = loweredEmail;
            users.IsActivated = isActivated;
            users.LastLoginDate = lastLoginDate;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserLoweredName
        {
            get
            {
                return _UserLoweredName;
            }
            set
            {
                OnUserLoweredNameChanging(value);
                ReportPropertyChanging("UserLoweredName");
                _UserLoweredName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserLoweredName");
                OnUserLoweredNameChanged();
            }
        }
        private global::System.String _UserLoweredName;
        partial void OnUserLoweredNameChanging(global::System.String value);
        partial void OnUserLoweredNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LockedDateOut
        {
            get
            {
                return _LockedDateOut;
            }
            set
            {
                OnLockedDateOutChanging(value);
                ReportPropertyChanging("LockedDateOut");
                _LockedDateOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockedDateOut");
                OnLockedDateOutChanged();
            }
        }
        private global::System.DateTime _LockedDateOut;
        partial void OnLockedDateOutChanging(global::System.DateTime value);
        partial void OnLockedDateOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LockedReason
        {
            get
            {
                return _LockedReason;
            }
            set
            {
                OnLockedReasonChanging(value);
                ReportPropertyChanging("LockedReason");
                _LockedReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LockedReason");
                OnLockedReasonChanged();
            }
        }
        private global::System.String _LockedReason;
        partial void OnLockedReasonChanging(global::System.String value);
        partial void OnLockedReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserRealName
        {
            get
            {
                return _UserRealName;
            }
            set
            {
                OnUserRealNameChanging(value);
                ReportPropertyChanging("UserRealName");
                _UserRealName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserRealName");
                OnUserRealNameChanged();
            }
        }
        private global::System.String _UserRealName;
        partial void OnUserRealNameChanging(global::System.String value);
        partial void OnUserRealNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ICQ
        {
            get
            {
                return _ICQ;
            }
            set
            {
                OnICQChanging(value);
                ReportPropertyChanging("ICQ");
                _ICQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ICQ");
                OnICQChanged();
            }
        }
        private global::System.String _ICQ;
        partial void OnICQChanging(global::System.String value);
        partial void OnICQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private global::System.String _About;
        partial void OnAboutChanging(global::System.String value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthdayDate
        {
            get
            {
                return _BirthdayDate;
            }
            set
            {
                OnBirthdayDateChanging(value);
                ReportPropertyChanging("BirthdayDate");
                _BirthdayDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthdayDate");
                OnBirthdayDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthdayDate;
        partial void OnBirthdayDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActivated
        {
            get
            {
                return _IsActivated;
            }
            set
            {
                OnIsActivatedChanging(value);
                ReportPropertyChanging("IsActivated");
                _IsActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActivated");
                OnIsActivatedChanged();
            }
        }
        private global::System.Boolean _IsActivated;
        partial void OnIsActivatedChanging(global::System.Boolean value);
        partial void OnIsActivatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebPage
        {
            get
            {
                return _WebPage;
            }
            set
            {
                OnWebPageChanging(value);
                ReportPropertyChanging("WebPage");
                _WebPage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebPage");
                OnWebPageChanged();
            }
        }
        private global::System.String _WebPage;
        partial void OnWebPageChanging(global::System.String value);
        partial void OnWebPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Forum_Users", "Forum")]
        public EntityCollection<Forum> Forum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Forum>("ForumV2Model.FK_Forum_Users", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Forum>("ForumV2Model.FK_Forum_Users", "Forum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Post_Users", "Post")]
        public EntityCollection<Post> Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("ForumV2Model.FK_Post_Users", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("ForumV2Model.FK_Post_Users", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_Topic_Users", "Topic")]
        public EntityCollection<Topic> Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Topic>("ForumV2Model.FK_Topic_Users", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Topic>("ForumV2Model.FK_Topic_Users", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_UserTopicLastActiv_Users", "UserTopicLastActiv")]
        public EntityCollection<UserTopicLastActiv> UserTopicLastActiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTopicLastActiv>("ForumV2Model.FK_UserTopicLastActiv_Users", "UserTopicLastActiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTopicLastActiv>("ForumV2Model.FK_UserTopicLastActiv_Users", "UserTopicLastActiv", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_UsersInRoles_Users", "UsersInRoles")]
        public EntityCollection<UsersInRoles> UsersInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInRoles>("ForumV2Model.FK_UsersInRoles_Users", "UsersInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInRoles>("ForumV2Model.FK_UsersInRoles_Users", "UsersInRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumV2Model", Name="UsersInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersInRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersInRoles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UsersInRoles CreateUsersInRoles(global::System.Guid userId, global::System.Guid roleId)
        {
            UsersInRoles usersInRoles = new UsersInRoles();
            usersInRoles.UserId = userId;
            usersInRoles.RoleId = roleId;
            return usersInRoles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_UsersInRoles_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_UsersInRoles_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_UsersInRoles_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_UsersInRoles_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("ForumV2Model.FK_UsersInRoles_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_UsersInRoles_Roles", "Roles")]
        public Roles Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("ForumV2Model.FK_UsersInRoles_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("ForumV2Model.FK_UsersInRoles_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("ForumV2Model.FK_UsersInRoles_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("ForumV2Model.FK_UsersInRoles_Roles", "Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumV2Model", Name="UserTopicLastActiv")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTopicLastActiv : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserTopicLastActiv object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userActivLastTime">Initial value of the UserActivLastTime property.</param>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        public static UserTopicLastActiv CreateUserTopicLastActiv(global::System.Guid userId, global::System.DateTime userActivLastTime, global::System.Int32 topicId)
        {
            UserTopicLastActiv userTopicLastActiv = new UserTopicLastActiv();
            userTopicLastActiv.UserId = userId;
            userTopicLastActiv.UserActivLastTime = userActivLastTime;
            userTopicLastActiv.TopicId = topicId;
            return userTopicLastActiv;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UserActivLastTime
        {
            get
            {
                return _UserActivLastTime;
            }
            set
            {
                OnUserActivLastTimeChanging(value);
                ReportPropertyChanging("UserActivLastTime");
                _UserActivLastTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserActivLastTime");
                OnUserActivLastTimeChanged();
            }
        }
        private global::System.DateTime _UserActivLastTime;
        partial void OnUserActivLastTimeChanging(global::System.DateTime value);
        partial void OnUserActivLastTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                if (_TopicId != value)
                {
                    OnTopicIdChanging(value);
                    ReportPropertyChanging("TopicId");
                    _TopicId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TopicId");
                    OnTopicIdChanged();
                }
            }
        }
        private global::System.Int32 _TopicId;
        partial void OnTopicIdChanging(global::System.Int32 value);
        partial void OnTopicIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_UserTopicLastActiv_Topic", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("ForumV2Model.FK_UserTopicLastActiv_Topic", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("ForumV2Model.FK_UserTopicLastActiv_Topic", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("ForumV2Model.FK_UserTopicLastActiv_Topic", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("ForumV2Model.FK_UserTopicLastActiv_Topic", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumV2Model", "FK_UserTopicLastActiv_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_UserTopicLastActiv_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_UserTopicLastActiv_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("ForumV2Model.FK_UserTopicLastActiv_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("ForumV2Model.FK_UserTopicLastActiv_Users", "Users", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
